- name: Apply repo php-qa standards
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Include task set_facts
      include_tasks: set_facts.yaml

    - name: Check if directory exists
      stat:
        path: "{{ repo.path + '/.github/' }}"
      register: directory_exists
    
    - name: Generate .php-cs-fixer.dist.php file
      ansible.builtin.template:
        src: "{{ './templates/php-qa/php-cs-fixer.dist.php.j2' }}"
        dest: "{{ repo.path + '/.php-cs-fixer.dist.php' }}"
      vars:
        phpstan_parameters_paths: "{{ repo_info.ansible_facts.repo.phpqa.php_fixer.path }}"
    
    - name: Generate phpstan.neon file
      ansible.builtin.template:
        src: "{{ './templates/php-qa/phpstan.neon.j2' }}"
        dest: "{{ repo.path + '/phpstan.neon' }}"
      vars:
        phpstan_parameters_level: "{{ repo_info.ansible_facts.repo.phpqa.phpstan.level  }}"
        phpstan_parameters_paths: "{{ repo_info.ansible_facts.repo.phpqa.phpstan.path }}"
  
    - name: Generate reviewdog.yaml for GitHub actions file
      ansible.builtin.template:
        src: "{{ './templates/php-qa/reviewdog-github.yaml.j2' }}"
        dest: "{{ repo.path + '/.github/workflows/reviewdog.yaml' }}"
      when: directory_exists.stat.exists

    - name: Generate reviewdog.yaml local file
      ansible.builtin.template:
        src: "{{ './templates/php-qa/reviewdog-local.yaml.j2' }}"
        dest: "{{ repo.path + '/.reviewdog.yaml' }}"
      
    - name: Generate yamllint.yaml file
      ansible.builtin.template:
        src: "{{ './templates/php-qa/yaml-lint-config.yaml.j2' }}"
        dest: "{{ repo.path + '/.yamllint.yaml' }}"

    - name: Generate twigcs.yaml file
      ansible.builtin.template:
        src: "{{ './templates/php-qa/twigcs.yaml.j2' }}"
        dest: "{{ repo.path + '/.twigcs.yaml' }}"
