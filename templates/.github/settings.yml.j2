# {{ repo_managed }}
# These settings are synced to GitHub by https://probot.github.io/apps/settings/
# See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

repository:

  # The name of the repository. Changing this will rename the repository
  name:  {{ repo.name }}

  # A short description of the repository that will show up on GitHub
  description: "{{ repo.description }}"

{% if repo.archived %}
  archived: true
{% endif %}

{% if repo.website is defined %}
  # A URL with more information about the repository
  homepage: {{ repo.website }}
{% endif %}

{% if repo.github.topics is defined %}
  # A comma-separated list of topics to set on the repository
  topics: {{ repo.github.topics|to_json }}
{% endif %}

  # Either `true` to make the repository private, or `false` to make it public.
  private: {{ 'true' if repo.visibility == 'private' else 'false' }}

  has_issues: {{ 'true' if repo.github.features.issues else 'false' }}

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: {{ 'true' if repo.github.features.projects else 'false' }}

  has_wiki: {{ 'true' if repo.github.features.wiki else 'false' }}

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: {{ 'true' if repo.github.features.downloads else 'false' }}

  # Updates the default branch for this repository.
  default_branch: {{ repo.github.default_branch }}

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: {{ 'true' if repo.github.features.squash_merge else 'false' }}

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: {{ 'true' if repo.github.features.merge_commit else 'false' }}

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: {{ 'true' if repo.github.features.rebase_merge else 'false' }}

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: fix
    color: CC0000
    description: An issue with the system.

  - name: feat
    # If including a `#`, make sure to wrap it with quotes!
    color: '#336699'
    description: New feature.

  - name: chore
    color: CC0000
    description: A repository chore.

{% if repo.github.review_policy %}
branches:
  # https://docs.github.com/en/rest/branches/branch-protection?apiVersion=2022-11-28#update-branch-protection
  - name: {{ repo.github.default_branch }}
    protection:
      required_status_checks: null
      enforce_admins: true
      required_pull_request_reviews:
        dismiss_stale_reviews: true
        required_approving_review_count: 1
        require_last_push_approval: true
        bypass_pull_request_allowances:
          users: ["dependabot[bot]"]       # Dependabot exception for the automatic merging of patch/security fixes
      restrictions:
{% if repo.github.default_branch_push_protection %}
        users: []
        teams: []
{% endif %}
      allow_force_pushes: false
      allow_deletions: false
      required_conversation_resolution: true
{% endif %}

# Milestones: define milestones for Issues and Pull Requests
{#
milestones:
  - title: milestone-title
    description: milestone-description
    # The state of the milestone. Either `open` or `closed`
    state: open
#}
{#
# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
teams:
  - name: core
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
    permission: admin
  - name: docs
    permission: push
#}
