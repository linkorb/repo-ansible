/**
 * {{ repo_managed }}
 *
 * Configuration file used by the release workflow .github/workflows/30-release-and-build.yaml
 */
/**
 * @type {import('semantic-release').GlobalConfig}
 */
module.exports = {
  branches: ["{{ repo.github.default_branch }}"],
  debug: "True",
  plugins: [
    [ "@semantic-release/commit-analyzer", { preset: "angular", releaseRules: [
          { type: "chore",    release: "patch" },
          { type: "ci",       release: "patch" },
          { type: "docs",     release: "patch" },
          { type: "refactor", release: "patch" },
          { type: "style",    release: "patch" },
          { type: "test",     release: "patch" },
    ] } ],
{% if repo.github_workflows.release.issue_url_format %}
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "presetConfig": {
          "issueUrlFormat": "{{ repo.github_workflows.release.issue_url_format }}"
        }
      }
    ],
{% else %}
    "@semantic-release/release-notes-generator",
{% endif %}
    "@semantic-release/github",
    "@semantic-release/changelog",
{% if package_json_version_bump %}
    [ "@semantic-release/npm", { npmPublish: false } ],
{% endif %}
    [ "@semantic-release/git", {
        assets: [ "CHANGELOG.md" {% if package_json_version_bump %}, "package.json" {% endif %}],
        message: "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
    } ],
    [ "@semantic-release/exec", { publishCmd: "echo -n ${nextRelease.version} > .gitrelease" } ]
  ]
}
